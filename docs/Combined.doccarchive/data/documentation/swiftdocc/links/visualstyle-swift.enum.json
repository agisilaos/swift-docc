{
  "abstract" : [
    {
      "text" : "A visual style for the links in a ‘Links’ directive.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC",
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/Links"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/Links\/VisualStyle-swift.enum"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:9SwiftDocC5LinksC11VisualStyleO",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "enum"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "VisualStyle"
      }
    ],
    "modules" : [
      {
        "name" : "SwiftDocC"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "VisualStyle"
      }
    ],
    "remoteSource" : {
      "fileName" : "Links.swift",
      "url" : "https:\/\/github.com\/apple\/swift-docc\/blob\/main\/Sources\/SwiftDocC\/Semantics\/Reference\/Links.swift#L55"
    },
    "role" : "symbol",
    "roleHeading" : "Enumeration",
    "symbolKind" : "enum",
    "title" : "Links.VisualStyle"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "enum"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "VisualStyle"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/SwiftDocC\/s12CaseIterableP",
        "doc:\/\/SwiftDocC\/SQ",
        "doc:\/\/SwiftDocC\/SH",
        "doc:\/\/SwiftDocC\/SY"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/Links\/VisualStyle-swift.enum\/compactGrid",
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/Links\/VisualStyle-swift.enum\/detailedGrid",
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/Links\/VisualStyle-swift.enum\/list"
      ],
      "title" : "Enumeration Cases"
    },
    {
      "identifiers" : [
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/Links\/VisualStyle-swift.enum\/init(rawValue:)"
      ],
      "title" : "Initializers"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/Links\/VisualStyle-swift.enum\/Equatable-Implementations",
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/Links\/VisualStyle-swift.enum\/RawRepresentable-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/swiftdocc\/links\/visualstyle-swift.enum"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://SwiftDocC/SH": {
  "identifier" : "doc:\/\/SwiftDocC\/SH",
  "title" : "Swift.Hashable",
  "type" : "unresolvable"
},
"doc://SwiftDocC/SQ": {
  "identifier" : "doc:\/\/SwiftDocC\/SQ",
  "title" : "Swift.Equatable",
  "type" : "unresolvable"
},
"doc://SwiftDocC/SY": {
  "identifier" : "doc:\/\/SwiftDocC\/SY",
  "title" : "Swift.RawRepresentable",
  "type" : "unresolvable"
},
"doc://SwiftDocC/documentation/SwiftDocC": {
  "abstract" : [
    {
      "text" : "Combine code comments with markup prose to produce structured, semantic documentation.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "SwiftDocC",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc"
},
"doc://SwiftDocC/documentation/SwiftDocC/Links": {
  "abstract" : [
    {
      "text" : "A directive for authoring authoring embedded",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "previews of documentation links (similar to how links are currently",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "rendered in Topics sections) anywhere on the page without affecting page",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "curation behavior.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Links"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/Links",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Links"
    }
  ],
  "role" : "symbol",
  "title" : "Links",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/links"
},
"doc://SwiftDocC/documentation/SwiftDocC/Links/VisualStyle-swift.enum": {
  "abstract" : [
    {
      "text" : "A visual style for the links in a ‘Links’ directive.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "VisualStyle"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/Links\/VisualStyle-swift.enum",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "VisualStyle"
    }
  ],
  "role" : "symbol",
  "title" : "Links.VisualStyle",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/links\/visualstyle-swift.enum"
},
"doc://SwiftDocC/documentation/SwiftDocC/Links/VisualStyle-swift.enum/Equatable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/Links\/VisualStyle-swift.enum\/Equatable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Equatable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/links\/visualstyle-swift.enum\/equatable-implementations"
},
"doc://SwiftDocC/documentation/SwiftDocC/Links/VisualStyle-swift.enum/RawRepresentable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/Links\/VisualStyle-swift.enum\/RawRepresentable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "RawRepresentable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/links\/visualstyle-swift.enum\/rawrepresentable-implementations"
},
"doc://SwiftDocC/documentation/SwiftDocC/Links/VisualStyle-swift.enum/compactGrid": {
  "abstract" : [
    {
      "text" : "A grid of items based on the card image for the linked pages.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "compactGrid"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/Links\/VisualStyle-swift.enum\/compactGrid",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "Links.VisualStyle.compactGrid",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/links\/visualstyle-swift.enum\/compactgrid"
},
"doc://SwiftDocC/documentation/SwiftDocC/Links/VisualStyle-swift.enum/detailedGrid": {
  "abstract" : [
    {
      "text" : "A grid of items based on the card image for the linked pages.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "detailedGrid"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/Links\/VisualStyle-swift.enum\/detailedGrid",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "Links.VisualStyle.detailedGrid",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/links\/visualstyle-swift.enum\/detailedgrid"
},
"doc://SwiftDocC/documentation/SwiftDocC/Links/VisualStyle-swift.enum/init(rawValue:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "?("
    },
    {
      "kind" : "externalParam",
      "text" : "rawValue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/Links\/VisualStyle-swift.enum\/init(rawValue:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(rawValue:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/links\/visualstyle-swift.enum\/init(rawvalue:)"
},
"doc://SwiftDocC/documentation/SwiftDocC/Links/VisualStyle-swift.enum/list": {
  "abstract" : [
    {
      "text" : "A list of the linked pages, including their full declaration and abstract.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "list"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/Links\/VisualStyle-swift.enum\/list",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "Links.VisualStyle.list",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/links\/visualstyle-swift.enum\/list"
},
"doc://SwiftDocC/s12CaseIterableP": {
  "identifier" : "doc:\/\/SwiftDocC\/s12CaseIterableP",
  "title" : "Swift.CaseIterable",
  "type" : "unresolvable"
}
}
}